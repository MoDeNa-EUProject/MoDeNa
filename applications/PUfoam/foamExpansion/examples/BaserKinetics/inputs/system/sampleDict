/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      sampleDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Set output format : choice of
//      xmgr
//      jplot
//      gnuplot
//      raw
setFormat raw;

// Surface output format. Choice of
//      null        : suppress output
//      foamFile    : separate points, faces and values file
//      dx          : DX scalar or vector format
//      vtk         : VTK ascii format
//      raw         : x y z value format for use with e.g. gnuplot 'splot'.
//      stl         : ascii stl. Does not contain values!
surfaceFormat foamFile;

// interpolationScheme. choice of
//	cell          : use cell-centre value only; constant over cells (default)
//	cellPoint     : use cell-centre and vertex values
//	cellPointFace : use cell-centre, vertex and face values.
// 1] vertex values determined from neighbouring cell-centre values
// 2] face values determined using the current face interpolation scheme
//    for the field (linear, gamma, etc.)
//interpolationScheme cell;
//interpolationScheme cellPoint;
interpolationScheme cell;

// Fields to sample.
fields
(
    mZero
    mOne
    mTwo
    mThree
);

// Set sampling definition: choice of
//      uniform             evenly distributed points on line
//      face                one point per face intersection
//      midPoint            one point per cell, inbetween two face intersections
//      midPointAndFace     combination of face and midPoint
//
//      curve               specified points, not nessecary on line, uses
//                          tracking
//      cloud               specified points, uses findCell
//
// axis: how to write point coordinate. Choice of
// - x/y/z: x/y/z coordinate only
// - xyz: three columns
//  (probably does not make sense for anything but raw)
// - distance: distance from start of sampling line (if uses line) or
//             distance from first specified sampling point
//
// type specific:
//      uniform, face, midPoint, midPointAndFace : start and end coordinate
//      uniform: extra number of sampling points
//      curve, cloud: list of coordinates
sets
(
    lineCenter
    {
        type            uniform;
        axis            y;
        start           (0.005 0 0.001);
        end             (0.005 0.1 0.001);
 	nPoints		9;
    }
    /*x=1H
    {
        type            midPoint;
        axis            z;
        start           (1 0.5 0);
        end             (1 0.5 4);
    }
    x=2H
    {
        type            midPoint;
        axis            z;
        start           (2 0.5 0);
        end             (2 0.5 4);
    }
    x=3H
    {
        type            midPoint;
        axis            z;
        start           (3 0.5 0);
        end             (3 0.5 4);
    }
    x=4H
    {
        type            midPoint;
        axis            z;
        start           (4 0.5 0);
        end             (4 0.5 4);
    }
    x=5H
    {
        type            midPoint;
        axis            z;
        start           (5 0.5 0);
        end             (5 0.5 4);
    }
   
    }*/
);

// Surface sampling definition: choice of
//      plane : values on plane defined by point, normal.
//      patch : values on patch.
//
// 1] planes are triangulated by default
// 2] patches are not triangulated by default
surfaces
(
);

// *********************************************************************** //
