#!/usr/bin/env python
'''

   ooo        ooooo           oooooooooo.             ooooo      ooo
   `88.       .888'           `888'   `Y8b            `888b.     `8'
    888b     d'888   .ooooo.   888      888  .ooooo.   8 `88b.    8   .oooo.
    8 Y88. .P  888  d88' `88b  888      888 d88' `88b  8   `88b.  8  `P  )88b
    8  `888'   888  888   888  888      888 888ooo888  8     `88b.8   .oP"888
    8    Y     888  888   888  888     d88' 888    .o  8       `888  d8(  888
   o8o        o888o `Y8bod8P' o888bood8P'   `Y8bod8P' o8o        `8  `Y888""8o

Copyright
    2014-2016 MoDeNa Consortium, All rights reserved.

License
    This file is part of Modena.

    Modena is free software; you can redistribute it and/or modify it under
    the terms of the GNU General Public License as published by the Free
    Software Foundation, either version 3 of the License, or (at your option)
    any later version.

    Modena is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
    details.

    You should have received a copy of the GNU General Public License along
    with Modena.  If not, see <http://www.gnu.org/licenses/>.

Description
    Initialization of Bubble growth model. Detailed Bubble growth simulation
    must be run first. Results must not be modified.

Authors
    Mohsen Karimi
    Pavel Ferkl

Contributors
'''
import json
from os import system, remove
from numpy import pi, log, exp, arange, zeros

# Number of moments of the bubble size distribution to be tracked
n = 6
# Approximate size of the initial bubbles, m
with open('./inputs/unifiedInput.json') as jsonfile:
    inputs=json.load(jsonfile)
size_0 = 2.0*inputs['initialConditions']['bubbleRadius']

# Volume of the initial bubbles, m3
v_0 = pi/6*(size_0**3)

# Number density of the initial bubbles, 1/m3
NN = inputs['initialConditions']['numberBubbleDensity']

# Parameters lognormal
mu = log(v_0)
sigma = inputs['initialConditions']['bubbleRadiusDeviation']
sigma2 = sigma**2

# mean and variance of the distribution
mean = exp(mu+0.5*sigma2)
var = exp(2*mu + sigma2)*(exp(sigma2) - 1)

# Moments of lognormal distribution
m = zeros(n)
for k in arange(0, n):
    m[k] = NN*exp(k*mu + 0.5*(k**2)*sigma**2)

kappa = 1-(m[1]/(1+m[1]))
M = zeros(n)
for i in arange(0,n):
    M[i] = m[i]*kappa

print('~~~ Moments of a log-normal distribution ~~~')
for j in arange(0,n):
    print('m[{0}] = {1}'.format(j,m[j]))
print('')
for l in arange(0,n):
    print('M[{0}] = {1}'.format(l,M[l]))

with open('initMoments.txt', 'w') as file:
    file.write('{0}\n'.format(n))
    for j in arange(0,n):
        file.write('{0}\n'.format(m[j]))

system('../MoDeNaModels/CFD_tool_3D/src/initMoments/initMoments')
remove('initMoments.txt')
