#!/usr/bin/env python
'''

   ooo        ooooo           oooooooooo.             ooooo      ooo
   `88.       .888'           `888'   `Y8b            `888b.     `8'
    888b     d'888   .ooooo.   888      888  .ooooo.   8 `88b.    8   .oooo.
    8 Y88. .P  888  d88' `88b  888      888 d88' `88b  8   `88b.  8  `P  )88b
    8  `888'   888  888   888  888      888 888ooo888  8     `88b.8   .oP"888
    8    Y     888  888   888  888     d88' 888    .o  8       `888  d8(  888
   o8o        o888o `Y8bod8P' o888bood8P'   `Y8bod8P' o8o        `8  `Y888""8o

Copyright
    2014-2016 MoDeNa Consortium, All rights reserved.

License
    This file is part of Modena.

    Modena is free software; you can redistribute it and/or modify it under
    the terms of the GNU General Public License as published by the Free
    Software Foundation, either version 3 of the License, or (at your option)
    any later version.

    Modena is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
    details.

    You should have received a copy of the GNU General Public License along
    with Modena.  If not, see <http://www.gnu.org/licenses/>.

Description
    Initialisation script needed to run Bubble growth model.

Authors
    Henrik Rusche
    Pavel Ferkl

Contributors
'''

from modena import SurrogateModel, MODENA_PARSED_URI
from fireworks import LaunchPad, Workflow
from fireworks.core.rocket_launcher import rapidfire
from pymongo import MongoClient

# import polymerViscosity # imported by Rheology_Arrhenius
# import SurfaceTension # imported by Rheology_Arrhenius
import PolymerDensity
import Solubility
import PolymerDensity_units
import Kinetics
import StrutContent
import foamConductivity
import diffusivity
# import Rheology_Arrhenius

# set up the LaunchPad and reset it
launchpad = LaunchPad(**MODENA_PARSED_URI)
launchpad.reset('', require_password=False)

initWfs = Workflow([])
for m in SurrogateModel.get_instances():
    initWfs.append_wf(m.initialisationStrategy().workflow(m), [])

# store workflow and launch it locally
launchpad.add_wf(initWfs)
rapidfire(launchpad)

# Surface tension has outsidePoint after initialization. Delete it.
# Create connections to database
url = 'mongodb://localhost:27017/'
client = MongoClient(url)
collection = client.test.surrogate_model
# PCSAFT surface tension model has problems with large temperatures
doc=collection.find({'_id': 'SurfaceTension[A=AIR,B=THF]'})
for key in doc:
    inputs=key['inputs']
    inputs['T']['max']=550
collection.update(
    {'_id': 'SurfaceTension[A=AIR,B=THF]'},
    {
        '$set': {
            'inputs': inputs
        }
    }
)
doc=collection.find({'_id': 'SurfaceTension[A=AIR,B=PU]'})
for key in doc:
    inputs=key['inputs']
    inputs['T']['min']=270
    inputs['T']['max']=550
collection.update(
    {'_id': 'SurfaceTension[A=AIR,B=PU]'},
    {
        '$set': {
            'inputs': inputs
        }
    }
)
# Rheology model has problems with large conversion (beyond gel point)
doc=collection.find({'_id': 'Rheology'})
for key in doc:
    inputs=key['inputs']
    inputs['T']['max']=550
    inputs['X']['max']=1.0
collection.update(
    {'_id': 'Rheology'},
    {
        '$set': {
            'inputs': inputs
        }
    }
)
